//import java.lang.reflect.Array;
//import java.util.Arrays;

public class HW3 {

    public static void main(String[] args) {
        /**
         * 1. Задать целочисленный массив, состоящий из элементов 0 и 1.
         * Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ]. С помощью цикла и условия заменить 0 на 1, 1 на 0;
         */
        int[] m1 = {1,0,1,0,1,1,1,0,1};
        for (int i = 0; i < m1.length; i++) m1[i]  = -m1[i] + 1;
        /**
         * 2. Задать пустой целочисленный массив длиной 100. С помощью цикла заполнить его значениями 1 2 3 4 5 6 7 8 … 100;
         */
        int[] m2 = new int[100];
        for(int i = 0; i < 100; i++) m2[i] = i;
        /**
         * 3. Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ] пройти по нему циклом, и числа меньшие 6 умножить на 2;
         */
        int[] m3 = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};
        for(int i = 0; i < m3.length; i++) if (m3[i] < 6) m3[i] = m3[i] * 2;
        /**
         * 4. Создать квадратный двумерный целочисленный массив (количество строк и столбцов одинаковое),
         * и с помощью цикла(-ов) заполнить его диагональные элементы единицами (можно только одну из диагоналей, если обе сложно).
         * Определить элементы одной из диагоналей можно по следующему принципу: индексы таких элементов равны,
         * то есть [0][0], [1][1], [2][2], …, [n][n];
         */
        int[][] m4 = new int[5][5];
        for(int i = 0; i < m4.length; i++) m4[i][i] = 1;
        for(int i = 0; i < m4.length; i++) m4[i][m4.length - i-1] = 1;
        /**
         * 6. * Задать одномерный массив и найти в нем минимальный и максимальный элементы ;
         */
        int[] m6 = {1,2,3,4,52,63,3,6,9};
        int m6_min = m6[0];
        int m6_max = m6[0];
        for(int i = 1; i < m6.length; i++){
            if (m6[i] > m6_max) m6_max = m6[i];
            if (m6[i] < m6_min) m6_min = m6[i];
        }
        System.out.println(m6_min);
        System.out.println(m6_max);

    }
    /**
     * 5. Написать метод, принимающий на вход два аргумента: len и initialValue,
     * и возвращающий одномерный массив типа int длиной len, каждая ячейка которого равна initialValue;
     */
    public int[] doFive(int len, int initalValue){
        int[] m5 = new int[len];
        for(int i = 0; i < m5.length; i++) m5[i] = initalValue;
        return m5;
    }
}
